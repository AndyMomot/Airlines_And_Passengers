/*
Создать экран, у которого будет containerView, который должен содержать два childViewController'a.
У каждого чайлдВьюКонтроллера должна быть таблица с хедером в виде поисковика.
вверху должны быть две кнопки, с помощью которых можно сделать активной первую или вторую таблицу
Также можно свайпать эти таблицы: если мы на первой таблице и зажав палец начинаем сдвигать ее влево, то наша первая таблица движется влево, но также движется влево(показывается с правой стороны) и вторая таблица. Если мы, находясь на первой таблице пытаемся свайпнуть вправо, то никакого движения не должно происходить. Если мы остановили движение пальцем и убрали палец с экрана, то должна показаться та таблица, которая на момент отпускания пальца занимает большую площадь экрана(как показано на видео).
Поисковик должен быть для каждой таблицы свой
В первой таблице мы отображаем список авиалиний(по урле https://api.instantwebtools.net/v1/airlines). Список не пагинируемый.
Во второй таблице отображаем список пассажиров(по урле https://api.instantwebtools.net/v1/passenger) Список пагинируемый.
Поисковик должен работать локально
Если вы отсортировали список пассажиров локально по какому-то тексту и скролите вниз, то пагинация не должна работать. Пагинация должны быть активной только при пустом поисковике. Поиск проводим только по тем данным, которые мы уже стянули.
Поисковик должен работать спустя 0,5 секунд после ввода последнего символа. То есть, если вы ввели текст “Erik” и вводили его с интервалом в 0,3 секунды каждую букву, то поиск у вас должен выполниться только один раз спустя 0,5 секунд после ввода последнего символа “k”. Если же вы вводили символы с периодичностью в 1 секунду, то поисковик должен отработать 4 раза - спустя 0,5 секунд после ввода каждого из символов.
Так же вы должны реализовать возможность создавать пассажира, эдитить его и удалять.
Реализовать Pull to refresh механизм для обеих таблиц.
 
 API для работы - https://www.instantwebtools.net/fake-rest-api#create-passenger
*/
